Elm.DrawCircles = Elm.DrawCircles || {};
Elm.DrawCircles.make = function (_elm) {
   "use strict";
   _elm.DrawCircles = _elm.DrawCircles || {};
   if (_elm.DrawCircles.values)
   return _elm.DrawCircles.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "DrawCircles",
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Text = Elm.Text.make(_elm);
   var ts = _L.fromArray(["P"
                         ,"U"
                         ,"S"
                         ,"Z"
                         ,"I"]);
   var cs = _L.fromArray([{ctor: "_Tuple2"
                          ,_0: 8
                          ,_1: {ctor: "_Tuple2"
                               ,_0: -300
                               ,_1: 0}}
                         ,{ctor: "_Tuple2"
                          ,_0: 9
                          ,_1: {ctor: "_Tuple2"
                               ,_0: -210
                               ,_1: 0}}
                         ,{ctor: "_Tuple2"
                          ,_0: 10
                          ,_1: {ctor: "_Tuple2"
                               ,_0: -110
                               ,_1: 0}}
                         ,{ctor: "_Tuple2"
                          ,_0: 11
                          ,_1: {ctor: "_Tuple2"
                               ,_0: 0
                               ,_1: 0}}
                         ,{ctor: "_Tuple2"
                          ,_0: 12
                          ,_1: {ctor: "_Tuple2"
                               ,_0: 150
                               ,_1: 0}}]);
   var color = function (n) {
      return function () {
         var colors = $Array.fromList(_L.fromArray([$Color.green
                                                   ,$Color.red
                                                   ,$Color.blue
                                                   ,$Color.yellow
                                                   ,$Color.brown
                                                   ,$Color.purple
                                                   ,$Color.orange]));
         var maybeColor = A2($Array.get,
         A2($Basics._op["%"],
         n,
         $Array.length(colors)),
         colors);
         return A2($Maybe.withDefault,
         $Color.green,
         maybeColor);
      }();
   };
   var circleForm = function (_v0) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            switch (_v0._1.ctor)
              {case "_Tuple2":
                 return $Graphics$Collage.move({ctor: "_Tuple2"
                                               ,_0: $Basics.toFloat(_v0._1._0)
                                               ,_1: $Basics.toFloat(_v0._1._1)})($Graphics$Collage.filled(color(_v0._0))($Graphics$Collage.circle($Basics.toFloat(_v0._0) * 5)));}
              break;}
         _U.badCase($moduleName,
         "between lines 26 and 28");
      }();
   };
   var circleWithText = F2(function (_v6,
   s) {
      return function () {
         switch (_v6.ctor)
         {case "_Tuple2":
            switch (_v6._1.ctor)
              {case "_Tuple2":
                 return $Graphics$Collage.group(_L.fromArray([circleForm({ctor: "_Tuple2"
                                                                         ,_0: _v6._0
                                                                         ,_1: {ctor: "_Tuple2"
                                                                              ,_0: _v6._1._0
                                                                              ,_1: _v6._1._1}})
                                                             ,$Graphics$Collage.move({ctor: "_Tuple2"
                                                                                     ,_0: $Basics.toFloat(_v6._1._0)
                                                                                     ,_1: $Basics.toFloat(_v6._1._1)})($Graphics$Collage.text($Text.height(40)($Text.bold($Text.fromString(s)))))]));}
              break;}
         _U.badCase($moduleName,
         "between lines 31 and 38");
      }();
   });
   var zip = $List.map2(F2(function (v0,
   v1) {
      return {ctor: "_Tuple2"
             ,_0: v0
             ,_1: v1};
   }));
   var circlesWithText = F2(function (cs,
   ts) {
      return $List.map($Basics.uncurry(circleWithText))(A2(zip,
      cs,
      ts));
   });
   var drawCircles = F3(function (d,
   t,
   _v12) {
      return function () {
         switch (_v12.ctor)
         {case "_Tuple2":
            return A2($Graphics$Collage.collage,
              _v12._0,
              _v12._1)(A2(circlesWithText,
              d,
              t));}
         _U.badCase($moduleName,
         "on line 46, column 25 to 59");
      }();
   });
   var main = A3(drawCircles,
   cs,
   ts,
   {ctor: "_Tuple2"
   ,_0: 900
   ,_1: 1000});
   _elm.DrawCircles.values = {_op: _op
                             ,zip: zip
                             ,color: color
                             ,circleForm: circleForm
                             ,circleWithText: circleWithText
                             ,circlesWithText: circlesWithText
                             ,drawCircles: drawCircles
                             ,cs: cs
                             ,ts: ts
                             ,main: main};
   return _elm.DrawCircles.values;
};